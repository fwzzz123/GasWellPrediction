<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proj.mapper.WellInfoMapper">

    <resultMap id="BaseResultMap" type="com.proj.entity.po.WellInfoPO">
            <id property="wellId" column="Well_ID" jdbcType="VARCHAR"/>
            <result property="reservoirId" column="Reservoir_ID" jdbcType="INTEGER"/>
            <result property="capacity" column="Capacity" jdbcType="NUMERIC"/>
            <result property="wellName" column="Well_Name" jdbcType="VARCHAR"/>
            <result property="wellType" column="Well_Type" jdbcType="VARCHAR"/>
            <result property="wellStatus" column="Well_Status" jdbcType="VARCHAR"/>
            <result property="wellCoordinates" column="Well_Coordinates" jdbcType="VARCHAR"/>
            <result property="completionDate" column="Completion_Date" jdbcType="DATE"/>
            <result property="section" column="Section" jdbcType="NUMERIC"/>
            <result property="thicknessContent" column="Thickness_Content" jdbcType="NUMERIC"/>
            <result property="mudContent" column="Mud_Content" jdbcType="NUMERIC"/>
            <result property="porositySaturation" column="Porosity_Saturation" jdbcType="NUMERIC"/>
            <result property="waterCut" column="Water_Cut" jdbcType="NUMERIC"/>
            <result property="permeableThickness" column="Permeable_Thickness" jdbcType="NUMERIC"/>
            <result property="equivalentHydrocarbons" column="Equivalent_Hydrocarbons" jdbcType="NUMERIC"/>
            <result property="conclusion" column="Conclusion" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        Well_ID,Reservoir_ID,Capacity,
        Well_Name,Well_Type,Well_Status,
        Well_Coordinates,Completion_Date,Section,
        Thickness_Content,Mud_Content,Porosity_Saturation,
        Water_Cut,Permeable_Thickness,Equivalent_Hydrocarbons,
        Conclusion
    </sql>
    <insert id="insertWellInfo" parameterType="com.proj.entity.po.WellInfoPO">
        INSERT INTO Well_Info (Reservoir_ID, Capacity, Well_Name, Well_Type)
        VALUES (
                   #{reservoirId},
                   #{capacity},
                   #{wellName},
                   #{wellType}
               )
    </insert>
    <insert id="insertCurveMapping" parameterType="com.proj.entity.po.WellLogCurveMappingPO">
        INSERT INTO well_log_curve_mapping (
            well_log_id,
            las_curve_name,
            standard_field_name,
            create_time,
            update_time
        )
        VALUES (
                   #{wellLogId},
                   #{lasCurveName},
                   #{standardFieldName},
                   #{createTime},
                   #{updateTime}
               )
    </insert>

    <select id="getByWellName" resultType="com.proj.entity.po.WellInfoPO" >
        select * from "Well_Info"
        where Well_Name = #{wellName}

    </select>
    <!-- 根据 Well_ID 更新记录 -->
    <update id="updateByWellId" parameterType="com.proj.entity.po.WellInfoPO">
        UPDATE Well_Info
        SET Reservoir_ID = #{reservoirId},
            Capacity = #{capacity},
            Well_Name = #{wellName},
            Well_Type = #{wellType},
            Well_Status = #{wellStatus},
            Well_Coordinates = #{wellCoordinates},
            Completion_Date = #{completionDate},
            Section = #{section},
            Thickness_Content = #{thicknessContent},
            Mud_Content = #{mudContent},
            Porosity_Saturation = #{porositySaturation},
            Water_Cut = #{waterCut},
            Permeable_Thickness = #{permeableThickness},
            Equivalent_Hydrocarbons = #{equivalentHydrocarbons},
            Conclusion = #{conclusion}
        WHERE Well_ID = #{wellId}
    </update>

    <!-- 根据 Well_ID 查询单条记录 -->
    <select id="selectByWellId" resultType="com.proj.entity.po.WellInfoPO">
        SELECT * FROM Well_Info WHERE Well_ID = #{wellId}
    </select>

    <!-- 根据 Well_ID 创建新记录 -->
    <insert id="createByWellId" parameterType="com.proj.entity.po.WellInfoPO">
        INSERT INTO Well_Info (Well_ID, Reservoir_ID, Capacity, Well_Name, Well_Type, Well_Status, Well_Coordinates, Completion_Date, Section, Thickness_Content, Mud_Content, Porosity_Saturation, Water_Cut, Permeable_Thickness, Equivalent_Hydrocarbons, Conclusion)
        VALUES (#{wellId}, #{reservoirId}, #{capacity}, #{wellName}, #{wellType}, #{wellStatus}, #{wellCoordinates}, #{completionDate}, #{section}, #{thicknessContent}, #{mudContent}, #{porositySaturation}, #{waterCut}, #{permeableThickness}, #{equivalentHydrocarbons}, #{conclusion})
    </insert>

    <!-- 根据 Well_ID 删除记录 -->
    <delete id="deleteByWellId" parameterType="java.lang.String">
        DELETE FROM well_info WHERE Well_ID = #{wellId}
    </delete>

    <!-- 检查是否存在指定 Well_ID 的记录 -->
    <select id="existsByWellId" parameterType="java.lang.String" resultType="boolean">
        SELECT COUNT(*) > 0 FROM Well_Info WHERE Well_ID = #{wellId}
    </select>

    <!-- 返回所有的井名 -->
    <select id="selectAllWellIds" resultType="string">
        SELECT well_id FROM Well_Info
    </select>




</mapper>
